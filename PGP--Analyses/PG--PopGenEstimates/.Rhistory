pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, stringr, reshape)
## Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
## Load helper functions (to be used along the script)
source("utilities.R")
# Cleans the environment ~
rm(list=ls())
## Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Loads required packages ~
#install.packages("pacman") #New users: install "pacman" prior to using p_load() function below
pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, stringr, reshape)
## Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
## Load helper functions (to be used along the script)
source("utilities.R")
## Loads the data ~
PopGen <- read.table("AfterChrGenome_PGP--GoodSamples_DoSaf-WithWrapper-DoThetas-NoWrapper_ForGenPop--Article--Ultra.PopGenSummary.txt", sep = "\t", header = FALSE); head(PopGen)
## Loads the data ~
PopGen <- read.table("AfterChrGenome_PGP--GoodSamples_DoSaf-WithWrapper-DoThetas-NoWrapper_ForGenPop.PopGenSummary.txt", sep = "\t", header = FALSE); head(PopGen)
Hets <- read.table("AfterChrGenome_PGP--GoodSamples_RefGen_OutGroup_Sites--Article--Ultra.Heterozygosity.txt", sep = "\t", header = FALSE); head(Hets)
## Adds column names ~
colnames(PopGen) <- c("Population", "NSites", "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
colnames(Hets) <- c("Sample_ID", "Population", "Het")
## Converts DF from wide into long (necessary for ggplot) ~
PopGenUp <- gather(PopGen, Estimate, Value, "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
## Adds data ID column to each DF ~
#(Mandatory for the plotting!)
PopGenUp$ID <- factor(paste("PopGen"))
Hets$ID <- factor(paste("Hets"))
fulldf <- mybind(PopGenUp, Hets)
## Includes label for empty factor level (related to PHS) ~
#  Quick'n dirty workaround (Mandatory for the plot!)
idx <- which(fulldf$ID == "Hets")
fulldf[idx,"Estimate"] <- rep("PHS", length(idx))
fulldf$Estimate <- factor(fulldf$Estimate) #Set to factor for plotting
## Reorders factor levels ~
# Sets the orders of the facets in the plot
fulldf$Estimate <-
factor(fulldf$Estimate, ordered = T, levels = c("PHS",
"Nucleotide_Diversity",
"Tajima_D",
"Watson_Theta"))
## Corrects the facet labels ~
ylabel <- c("Nucleotide_Diversity" = "Nucelotide Diversity",
"Tajima_D"= "Tajima's D",
"Watson_Theta" = "Watson's Theta",
"PHS"= "Heterozygosity")
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = BioStatus), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = BioStatus), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9"),
labels = gsub("_", " ", levels(fulldf$BioStatus))) +
scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Biological Status", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9"),
labels = gsub("_", " ", levels(fulldf$BioStatus))) +
scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Biological Status", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Biological Status", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
View(fulldf)
## Removes unwanted populations ~
UnwantedPops <- c("Pflavescens", "Pfluviatilis")
Hets <- filter(Hets, !Population %in% UnwantedPops)
# Cleans the environment ~
rm(list=ls())
## Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Loads required packages ~
#install.packages("pacman") #New users: install "pacman" prior to using p_load() function below
pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, stringr, reshape)
## Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
## Loads the data ~
PopGen <- read.table("AfterChrGenome_PGP--GoodSamples_DoSaf-WithWrapper-DoThetas-NoWrapper_ForGenPop.PopGenSummary.txt", sep = "\t", header = FALSE); head(PopGen)
Hets <- read.table("AfterChrGenome_PGP--GoodSamples_RefGen_OutGroup_Sites--Article--Ultra.Heterozygosity.txt", sep = "\t", header = FALSE); head(Hets)
## Adds column names ~
colnames(PopGen) <- c("Population", "NSites", "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
colnames(Hets) <- c("Sample_ID", "Population", "Het")
## Removes unwanted populations ~
UnwantedPops <- c("Pflavescens", "Pfluviatilis")
Hets <- filter(Hets, !Population %in% UnwantedPops)
## Converts DF from wide into long (necessary for ggplot) ~
PopGenUp <- gather(PopGen, Estimate, Value, "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
## Adds data ID column to each DF ~
#(Mandatory for the plotting!)
PopGenUp$ID <- factor(paste("PopGen"))
Hets$ID <- factor(paste("Hets"))
fulldf <- mybind(PopGenUp, Hets)
### The BEGINNING ~~~~
##
# ~ Plots FPGP--PopGenEstimates | By Marie-Christine RUFENER & George PACHECO
#################################
# There are two main data files: PopGen and Hets
# To plot the results, both datasets have to be set into a single data frame.
# The R script is thus organized as follows:
# 1) Setting working directory, loading packages, fonts, datasets & helper functions
# 2) Data wrangling
# 3) Plotting
# Cleans the environment ~
rm(list=ls())
#~~~~~~~~~~~~~~~~~~
# 1) Basic inputs
#~~~~~~~~~~~~~~~~~~
## Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
## Loads required packages ~
#install.packages("pacman") #New users: install "pacman" prior to using p_load() function below
pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, stringr, reshape)
## Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
## Load helper functions (to be used along the script)
source("utilities.R")
## Loads the data ~
PopGen <- read.table("AfterChrGenome_PGP--GoodSamples_DoSaf-WithWrapper-DoThetas-NoWrapper_ForGenPop.PopGenSummary.txt", sep = "\t", header = FALSE); head(PopGen)
Hets <- read.table("AfterChrGenome_PGP--GoodSamples_RefGen_OutGroup_Sites--Article--Ultra.Heterozygosity.txt", sep = "\t", header = FALSE); head(Hets)
## Adds column names ~
colnames(PopGen) <- c("Population", "NSites", "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
colnames(Hets) <- c("Sample_ID", "Population", "Het")
## Removes unwanted populations ~
UnwantedPops <- c("Pflavescens", "Pfluviatilis")
Hets <- filter(Hets, !Population %in% UnwantedPops)
## Converts DF from wide into long (necessary for ggplot) ~
PopGenUp <- gather(PopGen, Estimate, Value, "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
## Adds data ID column to each DF ~
#(Mandatory for the plotting!)
PopGenUp$ID <- factor(paste("PopGen"))
Hets$ID <- factor(paste("Hets"))
fulldf <- mybind(PopGenUp, Hets)
## Includes label for empty factor level (related to PHS) ~
#  Quick'n dirty workaround (Mandatory for the plot!)
idx <- which(fulldf$ID == "Hets")
fulldf[idx,"Estimate"] <- rep("PHS", length(idx))
fulldf$Estimate <- factor(fulldf$Estimate) #Set to factor for plotting
## Reorders factor levels ~
# Sets the orders of the facets in the plot
fulldf$Estimate <-
factor(fulldf$Estimate, ordered = T, levels = c("PHS",
"Nucleotide_Diversity",
"Tajima_D",
"Watson_Theta"))
## Corrects the facet labels ~
ylabel <- c("Nucleotide_Diversity" = "Nucelotide Diversity",
"Tajima_D"= "Tajima's D",
"Watson_Theta" = "Watson's Theta",
"PHS"= "Heterozygosity")
## Reorders populations ~
fulldf$Population <- factor(fulldf$Population, ordered = T,
levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F" ,"SON-F", "TYB-F",
"POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B"))
## Go for the plot
PopGennEstimates <-
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Biological Status", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "top",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Biological Status", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, ID =="PopGen"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
View(fulldf)
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, Estimate == "Nucleotide_Diversity"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
# Go for the plot
PopGennEstimates <-
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, Estimate == "Nucleotide_Diversity"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 12, height = 8, scale = 1.5, dpi = 600)
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 10, height = 5, scale = 1.5, dpi = 600)
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 10, height = 5, scale = 1.25, dpi = 600)
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 10, height = 5, scale = 1.75, dpi = 600)
View(Hets)
View(PopGen)
View(PopGenUp)
### The BEGINNING ~~~~
##
# ~ Plots FPGP--PopGenEstimates | By Marie-Christine RUFENER & George PACHECO
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(scales, extrafont, dplyr, grid, lubridate, cowplot, egg, tidyverse, stringr, reshape)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Load helper functions (to be used along the script)
source("utilities.R")
# Loads the data ~
PopGen <- read.table("AfterChrGenome_PGP--GoodSamples_DoSaf-WithWrapper-DoThetas-NoWrapper_ForGenPop.PopGenSummary.txt", sep = "\t", header = FALSE); head(PopGen)
Hets <- read.table("AfterChrGenome_PGP--GoodSamples_RefGen_OutGroup_Sites--Article--Ultra.Heterozygosity.txt", sep = "\t", header = FALSE); head(Hets)
# Adds column names ~
colnames(PopGen) <- c("Population", "NSites", "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
colnames(Hets) <- c("Sample_ID", "Population", "Het")
# Removes unwanted populations ~
UnwantedPops <- c("Pflavescens", "Pfluviatilis")
Hets <- filter(Hets, !Population %in% UnwantedPops)
# Converts DF from wide into long (necessary for ggplot) ~
PopGenUp <- gather(PopGen, Estimate, Value, "Nucleotide_Diversity", "Watson_Theta", "Tajima_D")
# Adds data ID column to each DF ~
PopGenUp$ID <- factor(paste("PopGen"))
Hets$ID <- factor(paste("Hets"))
# Binds the 2 DFs ~
fulldf <- mybind(PopGenUp, Hets)
# Includes label for empty factor level (related to PHS) ~
idx <- which(fulldf$ID == "Hets")
fulldf[idx,"Estimate"] <- rep("PHS", length(idx))
fulldf$Estimate <- factor(fulldf$Estimate) #Set to factor for plotting
# Reorders factor levels ~
fulldf$Estimate <-
factor(fulldf$Estimate, ordered = T, levels = c("PHS",
"Nucleotide_Diversity",
"Tajima_D",
"Watson_Theta"))
# Corrects the facet labels ~
ylabel <- c("Nucleotide_Diversity" = "Nucelotide Diversity",
"Tajima_D"= "Tajima's D",
"Watson_Theta" = "Watson's Theta",
"PHS"= "Heterozygosity")
# Reorders populations ~
fulldf$Population <- factor(fulldf$Population, ordered = T,
levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F" ,"SON-F", "TYB-F",
"POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B"))
# Creates the panel ~
PopGennEstimates <-
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, Estimate == "Nucleotide_Diversity"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 10, height = 5, scale = 1.75, dpi = 600)
#
##
### The END ~~~~
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
#geom_point(data = subset(fulldf, Estimate == "Nucleotide_Diversity"),
#aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
PopGennEstimates <-
ggplot() +
geom_boxplot(data = subset(fulldf, ID == "Hets"),
aes(x = Population, y = Het, fill = Population), show.legend = FALSE, outlier.colour = "black", outlier.shape = 21, outlier.size = 1.85, width = .3, lwd = .3) +
geom_point(data = subset(fulldf, Estimate == "Nucleotide_Diversity"),
aes(x = Population, y = Value, fill = Population), colour = "black", shape = 21, size = 3.5, alpha = .9) +
facet_grid(Estimate ~. , scales = "free", labeller = labeller(Estimate = ylabel)) +
#scale_fill_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
#scale_colour_manual(values = c("#44AA99", "#F0E442", "#E69F00", "#56B4E9")) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.major.x = element_line(color = "#ededed", linetype = "dashed", size = .00005),
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#000000", size = .3),
axis.title = element_blank(),
axis.text.x = element_text(colour="#000000", size = 16, face = "bold", family = "Helvetica", angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_text(color="#000000", size = 16, family = "Helvetica"),
axis.ticks.x = element_line(color="#000000", size = .3),
axis.ticks.y = element_line(color="#000000", size = .3),
strip.background.y = element_rect(colour = "#000000", fill = "#d6d6d6", size = 0.3),
strip.text = element_text(colour = "#000000", size = 12, face = "bold", family = "Georgia"),
legend.position = "right",
legend.key = element_rect(fill = NA),
legend.background =element_blank()) +
guides(fill = guide_legend(title = "Populations", title.theme = element_text(size = 16, face = "bold", family = "Helvetica"),
label.theme = element_text(size = 14, family = "Helvetica"),
override.aes = list(size = 5, alpha = .9)), colour = "none")
# Saves the panel ~
ggsave(PopGennEstimates, file = "PG--PopGenEstimates.pdf", device = cairo_pdf, width = 10, height = 5, scale = 1.75, dpi = 600)
View(fulldf)
