write.table(Fst, "FPG--Fst-Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates & Saves the heatmap ~
pheatmap(Fst, clustering_distance_rows = "correlation", clustering_distance_cols = "correlation", border_color = "black", cellwidth = 10, cellheight = 10,
treeheight_row = 55, treeheight_col = 55, filename = "FPG--Fst_0.pdf")
#
##
### The END ~~~~~
### The BEGINNING ~~~~
##
# ~ Plots FPGP--PopGenEstimates | By Marie-Christine RUFENER & George PACHECO
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, tidyverse, reshape2)
?pheatmap
# Loads Fst table ~
data <- read.table("FPG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(data) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes populations ~
data = subset(data, Pop1 != "Cpalumbus" & Pop2 != "Cpalumbus")
data = subset(data, Pop1 != "TelAvivColony" & Pop2 != "TelAvivColony")
# Melts data ~
pops = union(data$Pop1, data$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(data)) {
FstSites[data[i, "Pop1"], data[i, "Pop2"]] = data[i, "LociNumber"]
FstSites[data[i, "Pop2"], data[i, "Pop1"]] = data[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "FPG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(data)) {
Fst[data[i, "Pop1"], data[i, "Pop2"]] = data[i, "Weighted"]
Fst[data[i, "Pop2"], data[i, "Pop1"]] = data[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "FPG--Fst-Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates & Saves the heatmap ~
pheatmap(Fst, clustering_distance_rows = "correlation", clustering_distance_cols = "correlation", border_color = "black", cellwidth = 10, cellheight = 10,
treeheight_row = 55, treeheight_col = 55, filename = "FPG--Fst.pdf")
#
##
### The END ~~~~~
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "XXX" & Pop2 != "XXX")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
pheatmap?
# Cleans the environment ~
rm(list=ls())
?pheatmap
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "XXX" & Pop2 != "XXX")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0,nrow=n,ncol=n,dimnames = list(pops,pops))
for (i in 1:nrow(T)) {
mat[T[i,"Pop1"],T[i,"Pop2"]] = T[i,"LociNumber"]
mat[T[i,"Pop2"],T[i,"Pop1"]] = T[i,"Weighted"]
}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0,nrow=n,ncol=n,dimnames = list(pops,pops))
for (i in 1:nrow(T)) {
mat[T[i,"Pop1"],T[i,"Pop2"]] = T[i,"Weighted"]
mat[T[i,"Pop2"],T[i,"Pop1"]] = T[i,"Weighted"]
}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst-Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates & Saves the heatmap ~
pheatmap(Fst, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
cellwidth = 10, cellheight = 10, treeheight_row = 60, treeheight_col = 60,
filename = "PG--FstHOJE.pdf")
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstSites)) {
Fst[FstSites[i, "Pop1"], FstSites[i, "Pop2"]] = FstSites[i, "Weighted"]
Fst[FstSites[i, "Pop2"], FstSites[i, "Pop1"]] = FstSites[i, "Weighted"]}
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstSites)) {
Fst[FstSites[i, "Pop1"], FstSites[i, "Pop2"]] = FstSites[i, "Weighted"]
Fst[FstSites[i, "Pop2"], FstSites[i, "Pop1"]] = FstSites[i, "Weighted"]}
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "XXX" & Pop2 != "XXX")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstSites)) {
Fst[FstSites[i, "Pop1"], FstSites[i, "Pop2"]] = FstSites[i, "Weighted"]
Fst[FstSites[i, "Pop2"], FstSites[i, "Pop1"]] = FstSites[i, "Weighted"]}
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "XXX" & Pop2 != "XXX")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst-Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates & Saves the heatmap ~
pheatmap(Fst, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
cellwidth = 10, cellheight = 10, treeheight_row = 60, treeheight_col = 60,
filename = "PG--FstHOJE.pdf")
# Creates & Saves the heatmap ~
pheatmap(Fst, cluster_rows = TRUE, cluster_cols = FALSE, border_color = "black",
cellwidth = 10, cellheight = 10, treeheight_row = 60, treeheight_col = 60,
filename = "PG--FstHOJE_b.pdf")
# Creates & Saves the heatmap ~
pheatmap(Fst, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--FstHOJE_b.pdf")
View(Fst)
View(FstTable)
View(FstSites)
sub_anno <- structure(list(seq_share = c("shared", "shared", "shared", "shared", "shared", "shared", "unshared", "unshared", "unshared", "unshared",
"unshared", "unshared", "unshared", "unshared", "unshared", "unshared",
"unshared", "unshared", "unshared", "unshared")),
.Names = "seq_share",
row.names = c("XPRHQTYE",
"GQQG", "GYNY", "QLDY", "RGQI", "SRLPSDX", "PAVS", "PEAH", "RXVQYGTDT",
"RAPM", "SXPGTGKSA", "SLXVAGTNEK", "SLQGGXT", "SLTXASVE", "SPRXVTE",
"SPSARDRVGX", "SPTGGSYNX", "SRXGTSGRADE", "SRDXGPNYG", "TGTXLE"),
class = "data.frame")
View(sub_anno)
View(sub_anno)
sub_anno <- structure(list(row.names = c("XPRHQTYE", "GQQG", "GYNY", "QLDY", "RGQI", "SRLPSDX", "PAVS", "PEAH", "RXVQYGTDT",
"RAPM", "SXPGTGKSA", "SLXVAGTNEK", "SLQGGXT", "SLTXASVE", "SPRXVTE", "SPSARDRVGX", "SPTGGSYNX",
"SRXGTSGRADE", "SRDXGPNYG", "TGTXLE"),
class = "data.frame"))
View(sub_anno)
Fst_Ordered <- reorder_mat(Fst = Fst, order = PopOrder)
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
Fst_Ordered <- reorder_mat(Fst = Fst, order = PopOrder)
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast−B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
View(Fst_Ordered)
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "XXX" & Pop2 != "XXX")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast???B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf"
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast_B")
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast_B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast-B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "SouthEast-B" & Pop2 != "SouthEast-B")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B", "SouthEast-B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "SouthEast-B" & Pop2 != "SouthEast-B")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B")
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "SouthEast-B" & Pop2 != "SouthEast-B")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B")
# Reorders populations ~
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
#
##
### The END ~~~~~
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
View(FstTable)
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
View(FstTable)
View(FstTable)
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap, graph4lg)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "SouthEast-B" & Pop2 != "SouthEast-B")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B")
# Reorders populations ~
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
#
##
### The END ~~~~~
### The BEGINNING ~~~~~
##
# ~ Plots PG--Fst
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(pheatmap)
# Loads Fst table ~
FstTable <- read.table("PG--Fst.tsv", sep = "\t", header = FALSE, stringsAsFactors = FALSE)
# Adds column names ~
colnames(FstTable) <- c("Pop1", "Pop2", "LociNumber", "Unweighted", "Weighted")
# Removes certain populations ~
FstTable <- subset(FstTable, Pop1 != "SouthEast-B" & Pop2 != "SouthEast-B")
# Melts data ~
pops = union(FstTable$Pop1, FstTable$Pop2)
n = length(pops)
# Creates Fst-Sites matrix ~
FstSites <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
FstSites[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "LociNumber"]
FstSites[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Sites matrix ~
write.table(FstSites, "PG--Fst-Sites.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Creates Fst-Fst matrix ~
Fst <- matrix(0, nrow = n, ncol = n, dimnames = list(pops, pops))
for (i in 1:nrow(FstTable)) {
Fst[FstTable[i, "Pop1"], FstTable[i, "Pop2"]] = FstTable[i, "Weighted"]
Fst[FstTable[i, "Pop2"], FstTable[i, "Pop1"]] = FstTable[i, "Weighted"]}
# Writes Fst-Fst matrix ~
write.table(Fst, "PG--Fst.txt", sep = "\t", row.names = TRUE, col.names = TRUE)
# Reorganises the data ~
PopOrder <- c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B", "NAK-B", "KAR-B", "ISH-B")
# Reorders populations ~
Fst_Ordered <- reorder_mat(mat = Fst, order = PopOrder)
# Creates & Saves the heatmap ~
pheatmap(Fst_Ordered, cluster_rows = FALSE, cluster_cols = FALSE, border_color = "black",
treeheight_row = 60, treeheight_col = 60, filename = "PG--Fst.pdf")
#
##
### The END ~~~~~
