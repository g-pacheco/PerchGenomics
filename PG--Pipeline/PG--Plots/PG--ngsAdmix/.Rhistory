# Loads the data ~
samples <- read.table("PG--GoodSamples_NoOutgroup_NoREF_SNPs.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file ~
ids <- read.table("PG--GoodSamples_NoOutgroup_NoREF.annot", stringsAsFactors = FALSE, sep = "\t", header = FALSE)
# Adds column ids names ~
colnames(ids) <- c("Sample_ID", "Population")
# Creates alternative Population column ~
ids$Population_Alt <- ids$Population
# Ask Sama ~
fulldf <- data.frame()
# Ask Sama 2 ~
x <- list(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11),
c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),
c(6, 9, 1, 4, 2, 7, 3, 8, 5),
c(6, 7, 1, 4, 3, 2, 5, 8),
c(3, 4, 2, 1, 6, 5, 7),
c(1, 3, 4, 5, 6, 2),
c(5, 4, 2, 3, 1),
c(3, 2, 4, 1),
c(1, 2, 3),
c(2, 1))
# Defines samples' IDs ~
sampleid = "Sample_ID"
# Ask Sama 3 ~
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(Value = data[,i])
temp$K <- as.factor(rep(i, times = length(temp$Value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$K_Value <- as.factor(rep(paste("K = ", dim(data)[2], sep = ""), times = length(temp$Value)))
temp <- merge(ids, temp)
fulldf <- rbind(fulldf, temp)}}
# Reorganises the data ~
fulldf$Population_Alt <- factor(fulldf$Population_Alt, ordered = T, levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B",
"NAK-B", "KAR-B", "ISH-B"))
# Defines the target to be plotted ~
target = "Population_Alt"
# Creates the plots ~
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(.1, 0, .1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours.pdf", device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
#
##
### The END ~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13),
#c(1,2,3,4,5,6,7,8,9,10,11,12),
#c(1,2,3,4,5,6,7,8,9,10,11),
#c(1,2,3,4,5,6,7,8,9,10),
#c(1,2,3,4,5,6,7,8,9),
#c(1,2,3,4,5,6,7,8),
#c(1,2,3,4,5,6,7),
#c(1,2,3,4,5,6),
#c(1,2,3,4,5),
#c(1,2,3,4),
#c(1,2,3),
#c(1,2))
### The BEGINNING ~~~~~
##
# ~ Plots PG--ngsAdmix | First written by Jose Samaniego and later modified by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, optparse, plyr, RColorBrewer, extrafont, gtable, grid)
# Creates colour palette ~
nb.cols <- 15
MyColours <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads the data ~
samples <- read.table("PG--GoodSamples_NoOutgroup_NoREF_SNPs.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file ~
ids <- read.table("PG--GoodSamples_NoOutgroup_NoREF.annot", stringsAsFactors = FALSE, sep = "\t", header = FALSE)
# Adds column ids names ~
colnames(ids) <- c("Sample_ID", "Population")
# Creates alternative Population column ~
ids$Population_Alt <- ids$Population
# Ask Sama ~
fulldf <- data.frame()
# Ask Sama 2 ~
x <- list(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11),
c(2, 3, 7, 5, 4, 10, 1, 6, 9, 8),
c(6, 9, 1, 4, 2, 7, 3, 8, 5),
c(6, 7, 1, 4, 3, 2, 5, 8),
c(3, 4, 2, 1, 6, 5, 7),
c(1, 3, 4, 5, 6, 2),
c(5, 4, 2, 3, 1),
c(3, 2, 4, 1),
c(1, 2, 3),
c(2, 1))
# Defines samples' IDs ~
sampleid = "Sample_ID"
# Ask Sama 3 ~
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(Value = data[,i])
temp$K <- as.factor(rep(i, times = length(temp$Value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$K_Value <- as.factor(rep(paste("K = ", dim(data)[2], sep = ""), times = length(temp$Value)))
temp <- merge(ids, temp)
fulldf <- rbind(fulldf, temp)}}
# Reorganises the data ~
fulldf$Population_Alt <- factor(fulldf$Population_Alt, ordered = T, levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B",
"NAK-B", "KAR-B", "ISH-B"))
# Defines the target to be plotted ~
target = "Population_Alt"
# Creates the plots ~
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(.1, 0, .1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours.pdf", device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
#
##
### The END ~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13),
#c(1,2,3,4,5,6,7,8,9,10,11,12),
#c(1,2,3,4,5,6,7,8,9,10,11),
#c(1,2,3,4,5,6,7,8,9,10),
#c(1,2,3,4,5,6,7,8,9),
#c(1,2,3,4,5,6,7,8),
#c(1,2,3,4,5,6,7),
#c(1,2,3,4,5,6),
#c(1,2,3,4,5),
#c(1,2,3,4),
#c(1,2,3),
#c(1,2))
### The BEGINNING ~~~~~
##
# ~ Plots PG--ngsAdmix | First written by Jose Samaniego and later modified by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, optparse, plyr, RColorBrewer, extrafont, gtable, grid)
# Creates colour palette ~
nb.cols <- 15
MyColours <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads the data ~
samples <- read.table("PG--GoodSamples_NoOutgroup_NoREF_SNPs.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file ~
ids <- read.table("PG--GoodSamples_NoOutgroup_NoREF.annot", stringsAsFactors = FALSE, sep = "\t", header = FALSE)
# Adds column ids names ~
colnames(ids) <- c("Sample_ID", "Population")
# Creates alternative Population column ~
ids$Population_Alt <- ids$Population
# Ask Sama ~
fulldf <- data.frame()
# Ask Sama 2 ~
x <- list(c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
c(1, 6, 2, 3, 10, 7, 11, 9, 8, 4, 5),
c(2, 3, 7, 5, 4, 10, 1, 6, 9, 8),
c(6, 9, 1, 4, 2, 7, 3, 8, 5),
c(6, 7, 1, 4, 3, 2, 5, 8),
c(3, 4, 2, 1, 6, 5, 7),
c(1, 3, 4, 5, 6, 2),
c(5, 4, 2, 3, 1),
c(3, 2, 4, 1),
c(1, 2, 3),
c(2, 1))
# Defines samples' IDs ~
sampleid = "Sample_ID"
# Ask Sama 3 ~
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(Value = data[,i])
temp$K <- as.factor(rep(i, times = length(temp$Value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$K_Value <- as.factor(rep(paste("K = ", dim(data)[2], sep = ""), times = length(temp$Value)))
temp <- merge(ids, temp)
fulldf <- rbind(fulldf, temp)}}
# Reorganises the data ~
fulldf$Population_Alt <- factor(fulldf$Population_Alt, ordered = T, levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B",
"NAK-B", "KAR-B", "ISH-B"))
# Defines the target to be plotted ~
target = "Population_Alt"
# Creates the plots ~
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 12, margin = margin(.1, 0, .1, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours.pdf", device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
#
##
### The END ~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13),
#c(1,2,3,4,5,6,7,8,9,10,11,12),
#c(1,2,3,4,5,6,7,8,9,10,11),
#c(1,2,3,4,5,6,7,8,9,10),
#c(1,2,3,4,5,6,7,8,9),
#c(1,2,3,4,5,6,7,8),
#c(1,2,3,4,5,6,7),
#c(1,2,3,4,5,6),
#c(1,2,3,4,5),
#c(1,2,3,4),
#c(1,2,3),
#c(1,2))
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 11, margin = margin(.2, 0, .2, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours_NEW.pdf", device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 11, margin = margin(.25, 0, .25, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours_NEW.pdf",
device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
### The BEGINNING ~~~~~
##
# ~ Plots PG--ngsAdmix | First written by Jose Samaniego and later modified by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, optparse, plyr, RColorBrewer, extrafont, gtable, grid)
# Creates colour palette ~
nb.cols <- 15
MyColours <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads the data ~
samples <- read.table("PG--GoodSamples_NoOutgroup_NoREF_SNPs.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file ~
ids <- read.table("PG--GoodSamples_NoOutgroup_NoREF.annot", stringsAsFactors = FALSE, sep = "\t", header = FALSE)
# Adds column ids names ~
colnames(ids) <- c("Sample_ID", "Population")
# Creates alternative Population column ~
ids$Population_Alt <- ids$Population
# Ask Sama ~
fulldf <- data.frame()
# Ask Sama 2 ~
x <- list(c(10, 12, 6, 11, 1, 7, 2, 8, 3, 4, 5, 9),
c(1, 6, 2, 3, 10, 7, 11, 9, 8, 4, 5),
c(2, 3, 7, 5, 4, 10, 1, 6, 9, 8),
c(6, 9, 1, 4, 2, 7, 3, 8, 5),
c(6, 7, 1, 4, 3, 2, 5, 8),
c(3, 4, 2, 1, 6, 5, 7),
c(1, 3, 4, 5, 6, 2),
c(5, 4, 2, 3, 1),
c(3, 2, 4, 1),
c(1, 2, 3),
c(2, 1))
# Defines samples' IDs ~
sampleid = "Sample_ID"
# Ask Sama 3 ~
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(Value = data[,i])
temp$K <- as.factor(rep(i, times = length(temp$Value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$K_Value <- as.factor(rep(paste("K = ", dim(data)[2], sep = ""), times = length(temp$Value)))
temp <- merge(ids, temp)
fulldf <- rbind(fulldf, temp)}}
# Reorganises the data ~
fulldf$Population_Alt <- factor(fulldf$Population_Alt, ordered = T, levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B",
"NAK-B", "KAR-B", "ISH-B"))
# Defines the target to be plotted ~
target = "Population_Alt"
# Creates the plots ~
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
#scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 11, margin = margin(.25, 0, .25, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_RColours.pdf",
device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
#
##
### The END ~~~~~
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13,14),
#c(1,2,3,4,5,6,7,8,9,10,11,12,13),
#c(1,2,3,4,5,6,7,8,9,10,11,12),
#c(1,2,3,4,5,6,7,8,9,10,11),
#c(1,2,3,4,5,6,7,8,9,10),
#c(1,2,3,4,5,6,7,8,9),
#c(1,2,3,4,5,6,7,8),
#c(1,2,3,4,5,6,7),
#c(1,2,3,4,5,6),
#c(1,2,3,4,5),
#c(1,2,3,4),
#c(1,2,3),
#c(1,2))
### The BEGINNING ~~~~~
##
# ~ Plots PG--ngsAdmix | First written by Jose Samaniego and later modified by George Pacheco.
# Cleans the environment ~
rm(list=ls())
# Sets working directory ~
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Loads required packages ~
pacman::p_load(tidyverse, optparse, plyr, RColorBrewer, extrafont, gtable, grid)
# Creates colour palette ~
nb.cols <- 15
MyColours <- colorRampPalette(brewer.pal(8, "Paired"))(nb.cols)
# Imports extra fonts ~
loadfonts(device = "win", quiet = TRUE)
# Loads the data ~
samples <- read.table("PG--GoodSamples_NoOutgroup_NoREF_SNPs.popfile", stringsAsFactors = FALSE, sep = "\t")
# Reads the annotation file ~
ids <- read.table("PG--GoodSamples_NoOutgroup_NoREF.annot", stringsAsFactors = FALSE, sep = "\t", header = FALSE)
# Adds column ids names ~
colnames(ids) <- c("Sample_ID", "Population")
# Creates alternative Population column ~
ids$Population_Alt <- ids$Population
# Ask Sama ~
fulldf <- data.frame()
# Ask Sama 2 ~
x <- list(c(10, 12, 6, 11, 1, 7, 2, 8, 3, 4, 5, 9),
c(1, 6, 2, 3, 10, 7, 11, 9, 8, 4, 5),
c(2, 3, 7, 5, 4, 10, 1, 6, 9, 8),
c(6, 9, 1, 4, 2, 7, 3, 8, 5),
c(6, 7, 1, 4, 3, 2, 5, 8),
c(3, 4, 2, 1, 6, 5, 7),
c(1, 3, 4, 5, 6, 2),
c(5, 4, 2, 3, 1),
c(3, 2, 4, 1),
c(1, 2, 3),
c(2, 1))
# Defines samples' IDs ~
sampleid = "Sample_ID"
# Ask Sama 3 ~
for (j in 1:length(samples[,1])){
data <- read.table(samples[j,1])[,x[[j]]]
for (i in 1:dim(data)[2]) {
temp <- data.frame(Value = data[,i])
temp$K <- as.factor(rep(i, times = length(temp$Value)))
temp[sampleid] <- as.factor(ids[sampleid][,1])
temp$K_Value <- as.factor(rep(paste("K = ", dim(data)[2], sep = ""), times = length(temp$Value)))
temp <- merge(ids, temp)
fulldf <- rbind(fulldf, temp)}}
# Reorganises the data ~
fulldf$Population_Alt <- factor(fulldf$Population_Alt, ordered = T, levels = c("TAN-F", "RAN-B", "FAR-F", "SJA-F", "SON-F", "TYB-F", "POL-BF", "ROS-B", "KET-B",
"NAK-B", "KAR-B", "ISH-B"))
# Defines the target to be plotted ~
target = "Population_Alt"
# Creates the plots ~
ngsAdmix <-
ggplot(fulldf, aes(x = Sample_ID, y = Value, fill = K)) +
geom_bar(stat = "identity", width = .85) +
facet_grid(K_Value ~ get(target), space = "free_x", scales = "free_x") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), breaks = NULL) +
scale_fill_manual(values = MyColours) +
theme(panel.background = element_rect(fill = "#ffffff"),
panel.grid.minor.x = element_blank(),
panel.grid.major = element_blank(),
panel.spacing = unit(.25, "lines"),
plot.title = element_blank(),
axis.title = element_blank(),
axis.text.x = element_blank(),
#axis.text.x.bottom = element_text(colour = "#000000", size = 6, angle = 90, vjust = .5, hjust = 1),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
strip.background = element_rect(colour = "#000000", fill = '#FAFAFA', size = 0.05),
strip.text.x = element_text(colour = "#000000", face = "bold", size = 11, margin = margin(.25, 0, .25, 0, "cm")),
strip.text.y = element_text(colour = "#000000", face = "bold", size = 10, angle = 90, margin = margin(0, .1, 0, .1, "cm")),
legend.position = "none")
# Saves the final plot ~
ggsave(ngsAdmix, file = "PG--ngsAdmix_PairedColours.pdf",
device = cairo_pdf, width = 40, height = 15, scale = .75, dpi = 600)
